name: store

services:
    auth:
        profiles: [prod]
        build:
            context: ./auth
            dockerfile: Dockerfile
        ports:
            - '3029:3030' # host:container
        depends_on:
            db:
                condition: service_healthy
        environment:
            NODE_CONFIG: '{"postgresql": {"connection": {"host": "db", "port": 5432, "user": "$POSTGRES_USER", "password": "$POSTGRES_PASSWORD", "database": "auth"}}}'
    
    auth-dev:
        profiles: [dev]
        build:
            context: ./auth
            dockerfile: Dockerfile
        command: sh -c "npm run migrate && npm run dev"
        # nodemon fix
        # ref: https://docs.docker.com/compose/how-tos/file-watch/#example-1
        develop:
            watch:
                - action: sync
                  path: ./auth/src
                  target: /usr/src/app/src # Based on Dockerfile's WORKDIR
                  ignore:
                      - node_modules/
                - action: rebuild
                  path: ./auth/package.json
        ports:
            - '3029:3030' # host:container
        depends_on:
            db:
                condition: service_healthy
        environment:
            NODE_CONFIG: '{"postgresql": {"connection": {"host": "db", "port": 5432, "user": "$POSTGRES_USER", "password": "$POSTGRES_PASSWORD", "database": "auth"}}}'

    stock:
        profiles: [prod]
        build:
            context: ./stock
            dockerfile: Dockerfile
        ports:
            - '3030:3030' # host:container

        # Checks if db ready to accept connections
        depends_on:
            db:
                condition: service_healthy
        environment:
            NODE_CONFIG: '{"postgresql": {"connection": {"host": "db", "port": 5432, "user": "$POSTGRES_USER", "password": "$POSTGRES_PASSWORD", "database": "stock"}}}'

    stock-dev:
        profiles: [dev]
        build:
            context: ./stock
            dockerfile: Dockerfile
        command: sh -c "npm run migrate && npm run dev"
        # nodemon fix
        # ref: https://docs.docker.com/compose/how-tos/file-watch/#example-1
        develop:
            watch:
                - action: sync
                  path: ./stock/src
                  target: /usr/src/app/src # Based on Dockerfile's WORKDIR
                  ignore:
                      - node_modules/
                - action: rebuild
                  path: ./stock/package.json
        ports:
            - '3030:3030' # host:container

        # Checks if db ready to accept connections
        depends_on:
            db:
                condition: service_healthy
        environment:
            NODE_CONFIG: '{"postgresql": {"connection": {"host": "db", "port": 5432, "user": "$POSTGRES_USER", "password": "$POSTGRES_PASSWORD", "database": "stock"}}}'

    # stock-history:
    #   build:
    #     context: ./stock-history
    #     dockerfile: Dockerfile
    #   ports:
    #     - "3031:3030"  # host:container
    #   environment:
    #     DATABASE_URL: postgres://user:password@db:5432/${POSTGRES_DB}

    db:
        image: postgres:latest
        volumes:
            - pgdata:/var/lib/postgresql/data # Persists PostgreSQL data
        environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        
        # Makes possible `condition: service_healthy` check
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "$POSTGRES_USER" ]
            interval: 30s
            timeout: 60s
            retries: 5
            start_period: 80s  

        # (optionally) Exposes database to the host machine
        ports:
            - '15432:5432' # host:container

volumes:
    pgdata: # Named volume to make PostgreSQL data persist
